@model IEnumerable<FitApp.Models.Workouts>

@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "Workouts";

    // Get the logged-in user and check if they are in the Admin role
    var user = await UserManager.GetUserAsync(User);
    var isAdmin = user != null && await UserManager.IsInRoleAsync(user, "Admin");
}

<h1>Workouts</h1>

@if (isAdmin)
{
    <p>
        <a asp-action="Create" class="btn btn-primary">Create New Workout</a>
    </p>
}
<form asp-action="Index" method="get">
    <p>
        Search by name or description: <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Search" class="btn btn-default" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">Name</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DurationSortParm"]">Duration</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CaloriesSortParm"]">Cal. Burned</a>
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Duration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CaloriesBurned)
                </td>
                <td class="text-center">
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">
                        <i class="fas fa-info-circle"></i>
                    </a>
                    <form asp-action="SaveWorkout" asp-route-workoutId="@item.Id" method="post" class="d-inline" onsubmit="return workoutSaved();">
                        <button type="submit" class="btn btn-success btn-sm">
                            <i class="fas fa-save"></i> Save
                        </button>
                    </form>
                    @if (isAdmin)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">
                            <i class="fas fa-edit"></i>
                        </a>
                        <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this workout?');">
                            <button type="submit" class="btn btn-danger btn-sm">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    function workoutSaved() {
        alert('Your workout is saved!');
        return true;  // Proceed with the form submission
    }
</script>